rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Default deny all reads and writes if no other rules match
    match /{allPaths=**} {
      allow read, write: if false;
    }

    // Allow public read for any file in the companyLogo directory
    match /companyLogo/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Allow public read for any file in the aircraftImage directory
    match /aircraftImage/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Aircraft-specific documents
    // The uploadAircraftDocument flow makes these files public after upload.
    // Allow public read.
    // Allow authenticated users to write (upload).
    match /aircraft_documents/{aircraftId}/{documentId}/{fileName} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Example: User-specific files (e.g., profile pictures, private user uploads)
    // Only the authenticated user can read or write their own files.
    // match /user_uploads/{userId}/{allPaths=**} {
    //   allow read, write: if request.auth != null && request.auth.uid == userId;
    // }

    // Example: Company-wide documents that are not public but accessible to any authenticated user
    // match /company_documents_internal/{allPaths=**} {
    //   allow read: if request.auth != null;
    //   // Allow write only by admin (example, requires admin claim or role check)
    //   // allow write: if request.auth != null && request.auth.token.admin == true;
    // }

    // Example: Public assets like images for the app UI (if stored in Storage)
    // match /public_assets/{allPaths=**} {
    //   allow read: if true;
    //   allow write: if false; // Typically only admins/deploy process would write these
    // }
  }
}

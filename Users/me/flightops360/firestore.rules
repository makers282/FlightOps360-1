rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all access
    match /{document=**} {
      allow read, write: if false;
    }

    // Users collection:
    // - Allow users to read and write their own document.
    // - TODO: Consider if admins should have broader access.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null; // Allow any authenticated user to create their own user doc
    }

    // Company Profile: Typically only one document.
    // - Allow authenticated users to read.
    // - TODO: Restrict write to admins only.
    match /companyProfile/{profileId} {
      allow read: if true; // Made public for dashboard
      allow write: if request.auth != null; // TODO: Refine to admin only
    }

    // Fleet Aircraft:
    // - Allow authenticated users to read.
    // - TODO: Restrict write to admins or specific roles.
    match /fleet/{aircraftId} {
      allow read: if true; // Made public for dashboard
      allow write: if request.auth != null; // TODO: Refine
    }

    // Aircraft Rates:
    // - Allow authenticated users to read.
    // - TODO: Restrict write to admins or specific roles.
    match /aircraftRates/{aircraftId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Refine
    }
    
    // Aircraft Performance Data:
    // - Allow authenticated users to read.
    // - TODO: Restrict write to admins or specific roles.
    match /aircraftPerformanceData/{aircraftId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Refine
    }

    // Aircraft Component Times:
    // - Allow authenticated users to read.
    // - TODO: Restrict write (likely only backend flows should update this based on flight logs).
    match /aircraftComponentTimes/{aircraftId} {
      allow read: if true; // Made public for dashboard
      allow write: if request.auth != null; // TODO: Refine, likely backend only
    }

    // Maintenance Tasks:
    // - Allow authenticated users to read.
    // - TODO: Restrict write to authorized personnel.
    match /maintenanceTasks/{taskId} {
      allow read: if true; // Made public for dashboard
      allow write: if request.auth != null; // TODO: Refine
    }

    // Customers:
    // - Allow authenticated users to read and write.
    // - TODO: Consider if all users should write, or only specific roles.
    match /customers/{customerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Refine
    }

    // Quotes:
    // - Allow authenticated users to read and write.
    // - TODO: Consider if users should only manage their own quotes or if roles define access.
    match /quotes/{quoteId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Refine
    }
    
    // Trips:
    // - Allow authenticated users to read.
    // - TODO: Restrict write to authorized personnel.
    match /trips/{tripId} {
      allow read: if true; // Made public for dashboard
      allow write: if request.auth != null; // TODO: Refine
    }

    // Crew Members:
    // - Allow authenticated users to read.
    // - TODO: Restrict write to admins or HR.
    match /crewMembers/{crewMemberId} {
      allow read: if true; // Made public for dashboard
      allow write: if request.auth != null; // TODO: Refine
    }

    // Roles:
    // - Allow authenticated users to read.
    // - TODO: Restrict write to admins only.
    match /roles/{roleId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Refine (Admins only)
    }
    
    // Aircraft Documents:
    // - Allow authenticated users to read. (Files are public via Storage rules)
    // - TODO: Restrict write to authorized personnel or backend flows.
    match /aircraftDocuments/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Refine
    }
    
    // Company Documents:
    // - Allow authenticated users to read.
    // - TODO: Restrict write to admins or specific roles.
    match /companyDocuments/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Refine
    }
    
    // Crew Documents:
    // - Allow authenticated users to read.
    // - TODO: Restrict write to admins or specific roles.
    match /crewDocuments/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Refine
    }
    
    // Bulletins:
    // - Allow public read.
    // - TODO: Restrict write to admins or specific roles.
    match /bulletins/{bulletinId} {
      allow read: if true; // Made public for dashboard
      allow write: if request.auth != null; // TODO: Refine
    }
    
    // Notifications:
    // - Allow users to read and update their own notifications.
    // - TODO: Restrict create to backend flows.
    match /notifications/{notificationId} {
      allow read, update: if request.auth != null; // Simplistic for now, could be user-specific
      allow create, delete: if request.auth != null; // TODO: Restrict create to backend, delete to user/admin
    }

    // Aircraft Discrepancies:
    // - Allow authenticated users to read.
    // - TODO: Restrict write to authorized personnel.
    match /aircraftDiscrepancies/{discrepancyId} {
      allow read: if true; // Made public for dashboard
      allow write: if request.auth != null; // TODO: Refine
    }
    
    // Aircraft MEL Items:
    // - Allow authenticated users to read.
    // - TODO: Restrict write to authorized personnel.
    match /aircraftMelItems/{melItemId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Refine
    }

    // Flight Logs:
    // - Allow authenticated users to read.
    // - TODO: Restrict write to backend flows or specific roles after flight completion.
    match /flightLogs/{flightLogId} {
      allow read: if true; // Made public for now for easier debugging/access
      allow write: if request.auth != null; // Ensure authenticated users can write
    }
    
    // Aircraft Block Outs:
    // - Allow authenticated users to read and write.
    // - TODO: Refine write access based on roles (e.g., dispatch, maintenance).
    match /aircraftBlockOuts/{blockOutId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Refine
    }

  }
}

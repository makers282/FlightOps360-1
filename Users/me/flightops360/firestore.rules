
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Default deny all access unless explicitly allowed
    match /{document=**} {
      allow read, write: if false;
    }

    // Users can only read/write their own user document
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null; // Allow any authenticated user to create their own user doc
    }

    // Allow authenticated users to read/write most app collections.
    // TODO: Review and restrict WRITE access based on roles or ownership where appropriate for:
    // - fleet, aircraftRates, aircraftPerformanceData, aircraftComponentTimes, maintenanceTasks
    // - customers, quotes, trips, flightLogs
    // - roles (only admins should write)
    // - companyProfile (only admins should write)
    // - notifications (system might write, users might update 'isRead')
    // - companyDocuments, aircraftDocuments, crewDocuments (consider who uploads/manages)
    // - bulletins (admins/specific roles should write)
    // - crewMembers (admins/HR should write)
    // - aircraftDiscrepancies, aircraftMelItems (pilots/maintenance should write)
    // - aircraftBlockOuts (dispatch/admins should write)

    match /fleet/{aircraftId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to admin/authorized roles
    }

    match /aircraftRates/{aircraftId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to admin/authorized roles
    }

    match /aircraftPerformanceData/{aircraftId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to admin/authorized roles
    }

    match /aircraftComponentTimes/{aircraftId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to admin/authorized roles
    }
    
    match /maintenanceTasks/{taskId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to maintenance/admin roles
    }

    match /customers/{customerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to sales/admin roles
    }

    match /quotes/{quoteId} {
      allow read: if request.auth != null;
      // Example: allow write if user is creator or admin (requires storing createdBy uid on quote)
      // allow write: if request.auth != null && (resource.data.createdBy == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow write: if request.auth != null; // TODO: Refine based on roles/ownership
    }

    match /trips/{tripId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Refine based on roles (dispatch/admin)
    }

    match /flightLogs/{logId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to crew/admin for that trip
    }
    
    match /roles/{roleId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to admin roles ONLY
    }
    
    match /companyProfile/{profileId} { // Usually one doc, e.g., 'main'
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to admin roles ONLY
    }

    match /notifications/{notificationId} {
      allow read: if request.auth != null; // Could be user-specific or global
      allow update: if request.auth != null; // e.g., for marking as read
      allow create, delete: if request.auth != null; // TODO: Restrict create to system/admins
    }

    match /companyDocuments/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to admin/doc managers
    }

    match /aircraftDocuments/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to admin/aircraft managers
    }
    
    match /crewDocuments/{docId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to admin/crew managers
    }

    match /bulletins/{bulletinId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to admin/authorized roles
    }

    match /crewMembers/{crewId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to admin/HR roles
    }

    match /aircraftDiscrepancies/{discrepancyId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to pilots/maintenance roles
    }

    match /aircraftMelItems/{melId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to pilots/maintenance roles
    }
    
    match /aircraftBlockOuts/{blockOutId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null; // TODO: Restrict to dispatch/admin roles
    }
  }
}
